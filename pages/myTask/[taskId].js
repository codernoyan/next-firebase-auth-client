import Head from 'next/head';
import React from 'react';

const TaskDetails = ({ task }) => {
  const { title, description, addedTime, status, userEmail } = task;
  
  return (
    <>
      <Head>
        <title>Task Details - Next Firebase</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="md:w-1/2 mx-auto">
        <div>
          <h2 className="text-2xl font-semibold">My Task</h2>
        </div>
        <div className="mt-2 space-y-1">
          <h2 className="font-semibold">Task Title: <span className="capitalize">{title}</span></h2>
          <p>Description: <span className="capitalize">{description}</span></p>
          <p className="text-sm font-medium">Added On: {addedTime}</p>
          <p className="text-sky-600 font-semibold">Added By: {userEmail}</p>
        </div>
      </section>
    </>
  );
};

export default TaskDetails;

export const getServerSideProps = async (context) => {
  const { params } = context;
  // data fetch
  const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/task/details/${params.taskId}`);
  const data = await res.json();

  return {
    props: {
      task: data
    }
  }
};

export const getServerSidePaths = async () => {
  const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/tasks`);
  const tasks = await res.json();
  // paths
  const paths = tasks.map(task => {
    return {
      params: {
        taskId: `${task._id}`
      }
    }
  })
  return {
    paths,
    fallback: false
  }
}